pipeline {
    agent any
    environment {
        // Docker Hub credentials
        PAT_CREDENTIALS_ID = "PAT_Jenkins"
        DOCKER_CREDENTIALS_ID = "docker-hub" // Set Jenkins Docker Hub credentials ID here
        DOCKER_IMAGE = "lemichael52/hcmsiu:v2"
        CONTAINER_NAME = "hcmsiu" // Replace with your Docker container name
    }
//
    stages {
        stage('Checkout') {
            steps {
                // Pull the code from a private GitHub repository
                git url: 'https://github.com/ltmichael52/HCMSIU.git', credentialsId: "${PAT_CREDENTIALS_ID}"
                echo "Update git repo complete"
            }
        }
// 
        stage('Build Then Push Docker Image to Docker Hub') {
            steps {
                script {
                    withDockerRegistry(credentialsId: "${DOCKER_CREDENTIALS_ID}",url:'https://index.docker.io/v1/') {
                        
                        echo "Building Docker image ${DOCKER_IMAGE}..."
                        sh "docker build -t ${DOCKER_IMAGE} ."
                        echo "Docker image ${DOCKER_IMAGE} build complete."

                        echo "Pushing Docker image ${DOCKER_IMAGE} to Docker Hub..."
                        sh "docker push ${DOCKER_IMAGE}"
                        echo "Docker image ${DOCKER_IMAGE} push complete."
                    }
                }
            }
        }


        stage('Deploy New Image Locally') {
            steps {
                script {
                    // Stop and remove the old container, pull the new image, and start a new container
                    sh """
                    docker pull ${DOCKER_IMAGE} &&
                    docker stop ${CONTAINER_NAME} || true &&
                    docker rm ${CONTAINER_NAME} || true &&
                    docker run -d --name ${CONTAINER_NAME} -p 80:80 ${DOCKER_IMAGE}
                    """
                }
            }
        }
    }

    post {
        always {
            // Clean up Docker images on Jenkins
            sh "docker rmi ${DOCKER_IMAGE} || true"
        }
    }
}
